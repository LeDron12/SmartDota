dataset:
  type: "starz_public_matches"  # Type of dataset to load
  path: "../../data_new/fetched_datasets/stratz_matches.json"  # Path relative to project root
# dataset:
#   type: "public_matches"
#   path: "/Users/ankamenskiy/SmartDota/src/data_new/fetched_datasets/public_matches__[start_time_start-1743800400]_[start_time_end-1746392400]_[matches_limit-ALL]_[rank_lower_bound-20]_[rank_upper_bound-40].json"

transformers:
  - name: DatasetConverter
    enabled: true
    description: "Converts raw match data to DataFrame format"

  - name: HeroFeaturesTransformer
    enabled: true
    heroes_path: "data/heroes.json"
    description: "Transforms hero picks into one-hot encoded features"

  - name: HeroStatsTransformer
    enabled: true
    heroes_path: "data/hero_stats.json"
    use_extra_features: false
    # exclude_features: ["radiant_avg_hero_pickrate", "dire_avg_hero_pickrate"]
    description: "Calculates hero statistics features like winrates, pickrates, and banrates"

model:
  do_shap: false
  use_param_grid: false
  use_scaling: false
  
  # Base model parameters
  base_params:
    LogisticRegression:
      max_iter: 1000
      random_state: 42
      penalty: "l2"
      C: 1.0
      solver: "liblinear"

    RandomForest:
      n_estimators: 200
      random_state: 42
    
    CatBoost:
      iterations: 2000
      learning_rate: 0.02
      depth: 5
      loss_function: "Logloss"
      eval_metric: "Accuracy"
      random_seed: 42
      # verbose: 200

  param_grids:
    CatBoost:
      iterations: [1000]
      learning_rate: [0.03]
      depth: [5]
      l2_leaf_reg: [1, 3, 5]
      border_count: [32, 64, 128]
      bagging_temperature: [0.5, 1.0]
      random_strength: [1, 5]
    
    RandomForest:
      n_estimators: [300]
      random_state: [42]

    LogisticRegression:
      max_iter: [1000]
      random_state: [42]
      penalty: ["l2"]
      C: [2.0]
      solver: ["liblinear"]